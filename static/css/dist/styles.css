/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-amber-100: oklch(96.2% 0.059 95.617);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-amber-600: oklch(66.6% 0.179 58.318);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-emerald-100: oklch(95% 0.052 163.051);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-pink-100: oklch(94.8% 0.028 342.258);
    --color-pink-400: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --leading-normal: 1.5;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-sm: 8px;
    --blur-xl: 24px;
    --blur-3xl: 64px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .-top-0 {
    top: calc(var(--spacing) * -0);
  }
  .-top-3 {
    top: calc(var(--spacing) * -3);
  }
  .-top-40 {
    top: calc(var(--spacing) * -40);
  }
  .-top-52 {
    top: calc(var(--spacing) * -52);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-3 {
    top: calc(var(--spacing) * 3);
  }
  .top-20 {
    top: calc(var(--spacing) * 20);
  }
  .top-\[100\%\] {
    top: 100%;
  }
  .top-\[calc\(100\%-13rem\)\] {
    top: calc(100% - 13rem);
  }
  .-right-0 {
    right: calc(var(--spacing) * -0);
  }
  .-right-3 {
    right: calc(var(--spacing) * -3);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-3 {
    bottom: calc(var(--spacing) * 3);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-\[calc\(50\%\+3rem\)\] {
    left: calc(50% + 3rem);
  }
  .left-\[calc\(50\%-11rem\)\] {
    left: calc(50% - 11rem);
  }
  .isolate {
    isolation: isolate;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-30 {
    z-index: calc(30 * -1);
  }
  .z-20 {
    z-index: 20;
  }
  .z-30 {
    z-index: 30;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
  }
  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .-m-1\.5 {
    margin: calc(var(--spacing) * -1.5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .aspect-1097\/845 {
    aspect-ratio: 1097/845;
  }
  .aspect-1155\/678 {
    aspect-ratio: 1155/678;
  }
  .size-6 {
    width: calc(var(--spacing) * 6);
    height: calc(var(--spacing) * 6);
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-\[600px\] {
    min-height: 600px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/3 {
    width: calc(1/3 * 100%);
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-2\/4 {
    width: calc(2/4 * 100%);
  }
  .w-2\/5 {
    width: calc(2/5 * 100%);
  }
  .w-3\/3 {
    width: calc(3/3 * 100%);
  }
  .w-3\/5 {
    width: calc(3/5 * 100%);
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-40 {
    width: calc(var(--spacing) * 40);
  }
  .w-46 {
    width: calc(var(--spacing) * 46);
  }
  .w-60 {
    width: calc(var(--spacing) * 60);
  }
  .w-144\.5 {
    width: calc(var(--spacing) * 144.5);
  }
  .w-274\.25 {
    width: calc(var(--spacing) * 274.25);
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[90\%\] {
    width: 90%;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[400px\] {
    width: 400px;
  }
  .w-full {
    width: 100%;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-\[300px\] {
    min-width: 300px;
  }
  .min-w-\[400px\] {
    min-width: 400px;
  }
  .min-w-full {
    min-width: 100%;
  }
  .min-w-max {
    min-width: max-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-auto {
    flex: auto;
  }
  .flex-none {
    flex: none;
  }
  .table-auto {
    table-layout: auto;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-30 {
    rotate: 30deg;
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-grabbing {
    cursor: grabbing;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-evenly {
    justify-content: space-evenly;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }
  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-6 {
    column-gap: calc(var(--spacing) * 6);
  }
  .gap-x-8 {
    column-gap: calc(var(--spacing) * 8);
  }
  .gap-y-4 {
    row-gap: calc(var(--spacing) * 4);
  }
  .gap-y-10 {
    row-gap: calc(var(--spacing) * 10);
  }
  .gap-y-16 {
    row-gap: calc(var(--spacing) * 16);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-x-scroll {
    overflow-x: scroll;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-\[1px\] {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[2px\] {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-amber-100 {
    border-color: var(--color-amber-100);
  }
  .border-amber-100\/20 {
    border-color: color-mix(in srgb, oklch(96.2% 0.059 95.617) 20%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-amber-100\/20 {
      border-color: color-mix(in oklab, var(--color-amber-100) 20%, transparent);
    }
  }
  .border-emerald-100 {
    border-color: var(--color-emerald-100);
  }
  .border-gray-400 {
    border-color: var(--color-gray-400);
  }
  .border-gray-600 {
    border-color: var(--color-gray-600);
  }
  .border-white\/10 {
    border-color: color-mix(in srgb, #fff 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .border-white\/20 {
    border-color: color-mix(in srgb, #fff 20%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .border-white\/30 {
    border-color: color-mix(in srgb, #fff 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/30 {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .bg-amber-50 {
    background-color: var(--color-amber-50);
  }
  .bg-amber-500 {
    background-color: var(--color-amber-500);
  }
  .bg-black\/10 {
    background-color: color-mix(in srgb, #000 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/10 {
      background-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .bg-black\/30 {
    background-color: color-mix(in srgb, #000 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/30 {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-gray-600 {
    background-color: var(--color-gray-600);
  }
  .bg-gray-600\/40 {
    background-color: color-mix(in srgb, oklch(44.6% 0.03 256.802) 40%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-600\/40 {
      background-color: color-mix(in oklab, var(--color-gray-600) 40%, transparent);
    }
  }
  .bg-gray-800 {
    background-color: var(--color-gray-800);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-gray-900\/30 {
    background-color: color-mix(in srgb, oklch(21% 0.034 264.665) 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-900\/30 {
      background-color: color-mix(in oklab, var(--color-gray-900) 30%, transparent);
    }
  }
  .bg-gray-900\/40 {
    background-color: color-mix(in srgb, oklch(21% 0.034 264.665) 40%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-900\/40 {
      background-color: color-mix(in oklab, var(--color-gray-900) 40%, transparent);
    }
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-pink-500\/10 {
    background-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-500\/10 {
      background-color: color-mix(in oklab, var(--color-pink-500) 10%, transparent);
    }
  }
  .bg-pink-500\/60 {
    background-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 60%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-500\/60 {
      background-color: color-mix(in oklab, var(--color-pink-500) 60%, transparent);
    }
  }
  .bg-pink-600 {
    background-color: var(--color-pink-600);
  }
  .bg-pink-600\/0 {
    background-color: color-mix(in srgb, oklch(59.2% 0.249 0.584) 0%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-600\/0 {
      background-color: color-mix(in oklab, var(--color-pink-600) 0%, transparent);
    }
  }
  .bg-pink-600\/5 {
    background-color: color-mix(in srgb, oklch(59.2% 0.249 0.584) 5%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-600\/5 {
      background-color: color-mix(in oklab, var(--color-pink-600) 5%, transparent);
    }
  }
  .bg-pink-600\/50 {
    background-color: color-mix(in srgb, oklch(59.2% 0.249 0.584) 50%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-600\/50 {
      background-color: color-mix(in oklab, var(--color-pink-600) 50%, transparent);
    }
  }
  .bg-pink-600\/60 {
    background-color: color-mix(in srgb, oklch(59.2% 0.249 0.584) 60%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-600\/60 {
      background-color: color-mix(in oklab, var(--color-pink-600) 60%, transparent);
    }
  }
  .bg-pink-600\/70 {
    background-color: color-mix(in srgb, oklch(59.2% 0.249 0.584) 70%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-600\/70 {
      background-color: color-mix(in oklab, var(--color-pink-600) 70%, transparent);
    }
  }
  .bg-pink-700\/30 {
    background-color: color-mix(in srgb, oklch(52.5% 0.223 3.958) 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-pink-700\/30 {
      background-color: color-mix(in oklab, var(--color-pink-700) 30%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/5 {
    background-color: color-mix(in srgb, #fff 5%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .bg-white\/10 {
    background-color: color-mix(in srgb, #fff 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .bg-white\/20 {
    background-color: color-mix(in srgb, #fff 20%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/20 {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-white\/40 {
    background-color: color-mix(in srgb, #fff 40%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/40 {
      background-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .bg-linear-to-tr {
    --tw-gradient-position: to top right;
  }
  @supports (background-image: linear-gradient(in lab, red, red)) {
    .bg-linear-to-tr {
      --tw-gradient-position: to top right in oklab;
    }
  }
  .bg-linear-to-tr {
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-bl {
    --tw-gradient-position: to bottom left in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-\[\#ff61b0\] {
    --tw-gradient-from: #ff61b0;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#ff80b5\] {
    --tw-gradient-from: #ff80b5;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-\[\#ff4694\] {
    --tw-gradient-from: #ff4694;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#5D1F3E\] {
    --tw-gradient-to: #5D1F3E;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#776fff\] {
    --tw-gradient-to: #776fff;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#9089fc\] {
    --tw-gradient-to: #9089fc;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .object-cover {
    object-fit: cover;
  }
  .object-right {
    object-position: right;
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-3\.5 {
    padding-inline: calc(var(--spacing) * 3.5);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-10 {
    padding-inline: calc(var(--spacing) * 10);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }
  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }
  .pt-32 {
    padding-top: calc(var(--spacing) * 32);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .font-serif {
    font-family: var(--font-serif);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .leading-normal {
    --tw-leading: var(--leading-normal);
    line-height: var(--leading-normal);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .font-thin {
    --tw-font-weight: var(--font-weight-thin);
    font-weight: var(--font-weight-thin);
  }
  .tracking-normal {
    --tw-tracking: var(--tracking-normal);
    letter-spacing: var(--tracking-normal);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-amber-400 {
    color: var(--color-amber-400);
  }
  .text-amber-500 {
    color: var(--color-amber-500);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-500 {
    color: var(--color-green-500);
  }
  .text-indigo-400 {
    color: var(--color-indigo-400);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-pink-100 {
    color: var(--color-pink-100);
  }
  .text-pink-400 {
    color: var(--color-pink-400);
  }
  .text-pink-500 {
    color: var(--color-pink-500);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/50 {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .text-white\/60 {
    color: color-mix(in srgb, #fff 60%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/60 {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/70 {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/90 {
    color: color-mix(in srgb, #fff 90%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/90 {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .lowercase {
    text-transform: lowercase;
  }
  .placeholder-white::placeholder {
    color: var(--color-white);
  }
  .opacity-20 {
    opacity: 20%;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-white\/10 {
    --tw-ring-color: color-mix(in srgb, #fff 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-white\/10 {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .ring-white\/30 {
    --tw-ring-color: color-mix(in srgb, #fff 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-white\/30 {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .outline-\[1px\] {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .-outline-offset-1 {
    outline-offset: calc(1px * -1);
  }
  .outline-white\/10 {
    outline-color: color-mix(in srgb, #fff 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .outline-white\/10 {
      outline-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  @media (hover: hover) {
    .group-hover\:w-full:is(:where(.group):hover *) {
      width: 100%;
    }
  }
  @media (hover: hover) {
    .group-hover\:text-pink-500:is(:where(.group):hover *) {
      color: var(--color-pink-500);
    }
  }
  @media (hover: hover) {
    .group-hover\:text-white:is(:where(.group):hover *) {
      color: var(--color-white);
    }
  }
  .placeholder\:text-white\/30::placeholder {
    color: color-mix(in srgb, #fff 30%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .placeholder\:text-white\/30::placeholder {
      color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .placeholder\:text-white\/50::placeholder {
    color: color-mix(in srgb, #fff 50%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .placeholder\:text-white\/50::placeholder {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  @media (hover: hover) {
    .hover\:bg-amber-600:hover {
      background-color: var(--color-amber-600);
    }
  }
  @media (hover: hover) {
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
  }
  @media (hover: hover) {
    .hover\:bg-indigo-500\/80:hover {
      background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 80%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-indigo-500\/80:hover {
        background-color: color-mix(in oklab, var(--color-indigo-500) 80%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-pink-400\/50:hover {
      background-color: color-mix(in srgb, oklch(71.8% 0.202 349.761) 50%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-pink-400\/50:hover {
        background-color: color-mix(in oklab, var(--color-pink-400) 50%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-pink-500\/50:hover {
      background-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 50%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-pink-500\/50:hover {
        background-color: color-mix(in oklab, var(--color-pink-500) 50%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-pink-700:hover {
      background-color: var(--color-pink-700);
    }
  }
  @media (hover: hover) {
    .hover\:bg-pink-700\/7:hover {
      background-color: color-mix(in srgb, oklch(52.5% 0.223 3.958) 7%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-pink-700\/7:hover {
        background-color: color-mix(in oklab, var(--color-pink-700) 7%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-pink-700\/70:hover {
      background-color: color-mix(in srgb, oklch(52.5% 0.223 3.958) 70%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-pink-700\/70:hover {
        background-color: color-mix(in oklab, var(--color-pink-700) 70%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-white\/20:hover {
      background-color: color-mix(in srgb, #fff 20%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/20:hover {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:bg-white\/60:hover {
      background-color: color-mix(in srgb, #fff 60%, transparent);
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/60:hover {
        background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
  }
  @media (hover: hover) {
    .hover\:text-indigo-500:hover {
      color: var(--color-indigo-500);
    }
  }
  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }
  .focus\:border-white\/10:focus {
    border-color: color-mix(in srgb, #fff 10%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus\:border-white\/10:focus {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .focus\:bg-gray-900:focus {
    background-color: var(--color-gray-900);
  }
  .focus\:outline-\[1px\]:focus {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .focus\:-outline-offset-\[1px\]:focus {
    outline-offset: calc(1px * -1);
  }
  .focus\:outline-pink-500\/60:focus {
    outline-color: color-mix(in srgb, oklch(65.6% 0.241 354.308) 60%, transparent);
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus\:outline-pink-500\/60:focus {
      outline-color: color-mix(in oklab, var(--color-pink-500) 60%, transparent);
    }
  }
  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  .focus-visible\:outline-2:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .focus-visible\:outline-offset-2:focus-visible {
    outline-offset: 2px;
  }
  .focus-visible\:outline-indigo-600:focus-visible {
    outline-color: var(--color-indigo-600);
  }
  @media (width < 64rem) {
    .max-lg\:hidden {
      display: none;
    }
  }
  @media (width < 64rem) {
    .max-lg\:min-w-\[2000px\] {
      min-width: 2000px;
    }
  }
  @media (width < 64rem) {
    .max-lg\:flex-col {
      flex-direction: column;
    }
  }
  @media (width < 48rem) {
    .max-md\:mt-2 {
      margin-top: calc(var(--spacing) * 2);
    }
  }
  @media (width < 48rem) {
    .max-md\:mt-3 {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  @media (width < 48rem) {
    .max-md\:mb-4 {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  @media (width < 48rem) {
    .max-md\:h-14 {
      height: calc(var(--spacing) * 14);
    }
  }
  @media (width < 48rem) {
    .max-md\:w-\[70\%\] {
      width: 70%;
    }
  }
  @media (width < 48rem) {
    .max-md\:grid-cols-1 {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }
  @media (width < 48rem) {
    .max-md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width < 48rem) {
    .max-md\:flex-col {
      flex-direction: column;
    }
  }
  @media (width < 48rem) {
    .max-md\:px-2 {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  @media (width < 48rem) {
    .max-md\:px-5 {
      padding-inline: calc(var(--spacing) * 5);
    }
  }
  @media (width < 48rem) {
    .max-md\:py-1 {
      padding-block: calc(var(--spacing) * 1);
    }
  }
  @media (width < 48rem) {
    .max-md\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
  }
  @media (width < 48rem) {
    .max-md\:pt-20 {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  @media (width < 48rem) {
    .max-md\:pb-32 {
      padding-bottom: calc(var(--spacing) * 32);
    }
  }
  @media (width < 48rem) {
    .max-md\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  @media (width < 48rem) {
    .max-md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  @media (width < 48rem) {
    .max-md\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  @media (width < 48rem) {
    .max-md\:text-xs {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  @media (width >= 40rem) {
    .sm\:absolute {
      position: absolute;
    }
  }
  @media (width >= 40rem) {
    .sm\:-top-10 {
      top: calc(var(--spacing) * -10);
    }
  }
  @media (width >= 40rem) {
    .sm\:-top-80 {
      top: calc(var(--spacing) * -80);
    }
  }
  @media (width >= 40rem) {
    .sm\:top-\[-28rem\] {
      top: -28rem;
    }
  }
  @media (width >= 40rem) {
    .sm\:top-\[calc\(100\%-30rem\)\] {
      top: calc(100% - 30rem);
    }
  }
  @media (width >= 40rem) {
    .sm\:right-1\/2 {
      right: calc(1/2 * 100%);
    }
  }
  @media (width >= 40rem) {
    .sm\:left-\[calc\(50\%\+36rem\)\] {
      left: calc(50% + 36rem);
    }
  }
  @media (width >= 40rem) {
    .sm\:left-\[calc\(50\%-30rem\)\] {
      left: calc(50% - 30rem);
    }
  }
  @media (width >= 40rem) {
    .sm\:-z-10 {
      z-index: calc(10 * -1);
    }
  }
  @media (width >= 40rem) {
    .sm\:mx-auto {
      margin-inline: auto;
    }
  }
  @media (width >= 40rem) {
    .sm\:mt-20 {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  @media (width >= 40rem) {
    .sm\:mr-10 {
      margin-right: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 40rem) {
    .sm\:ml-16 {
      margin-left: calc(var(--spacing) * 16);
    }
  }
  @media (width >= 40rem) {
    .sm\:block {
      display: block;
    }
  }
  @media (width >= 40rem) {
    .sm\:w-288\.75 {
      width: calc(var(--spacing) * 288.75);
    }
  }
  @media (width >= 40rem) {
    .sm\:w-full {
      width: 100%;
    }
  }
  @media (width >= 40rem) {
    .sm\:max-w-sm {
      max-width: var(--container-sm);
    }
  }
  @media (width >= 40rem) {
    .sm\:translate-x-0 {
      --tw-translate-x: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  @media (width >= 40rem) {
    .sm\:transform-gpu {
      transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    }
  }
  @media (width >= 40rem) {
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width >= 40rem) {
    .sm\:py-24 {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  @media (width >= 40rem) {
    .sm\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  @media (width >= 40rem) {
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  @media (width >= 40rem) {
    .sm\:text-sm\/6 {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 6);
    }
  }
  @media (width >= 40rem) {
    .sm\:blur-3xl {
      --tw-blur: blur(var(--blur-3xl));
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  @media (width >= 48rem) {
    .md\:right-5 {
      right: calc(var(--spacing) * 5);
    }
  }
  @media (width >= 48rem) {
    .md\:mt-4 {
      margin-top: calc(var(--spacing) * 4);
    }
  }
  @media (width >= 48rem) {
    .md\:mt-10 {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 48rem) {
    .md\:mt-20 {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  @media (width >= 48rem) {
    .md\:mb-4 {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  @media (width >= 48rem) {
    .md\:flex {
      display: flex;
    }
  }
  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }
  @media (width >= 48rem) {
    .md\:h-10 {
      height: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 48rem) {
    .md\:w-10 {
      width: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 48rem) {
    .md\:w-\[40\%\] {
      width: 40%;
    }
  }
  @media (width >= 48rem) {
    .md\:w-\[50\%\] {
      width: 50%;
    }
  }
  @media (width >= 48rem) {
    .md\:w-\[70vw\] {
      width: 70vw;
    }
  }
  @media (width >= 48rem) {
    .md\:w-\[400px\] {
      width: 400px;
    }
  }
  @media (width >= 48rem) {
    .md\:max-w-4xl {
      max-width: var(--container-4xl);
    }
  }
  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width >= 48rem) {
    .md\:gap-1 {
      gap: calc(var(--spacing) * 1);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-2 {
      gap: calc(var(--spacing) * 2);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-3 {
      gap: calc(var(--spacing) * 3);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-5 {
      gap: calc(var(--spacing) * 5);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-6 {
      gap: calc(var(--spacing) * 6);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-8 {
      gap: calc(var(--spacing) * 8);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-10 {
      gap: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-x-4 {
      column-gap: calc(var(--spacing) * 4);
    }
  }
  @media (width >= 48rem) {
    .md\:gap-y-6 {
      row-gap: calc(var(--spacing) * 6);
    }
  }
  @media (width >= 48rem) {
    .md\:object-center {
      object-position: center;
    }
  }
  @media (width >= 48rem) {
    .md\:p-6 {
      padding: calc(var(--spacing) * 6);
    }
  }
  @media (width >= 48rem) {
    .md\:px-2 {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  @media (width >= 48rem) {
    .md\:px-3 {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  @media (width >= 48rem) {
    .md\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  @media (width >= 48rem) {
    .md\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  @media (width >= 48rem) {
    .md\:py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
  }
  @media (width >= 48rem) {
    .md\:py-2\.5 {
      padding-block: calc(var(--spacing) * 2.5);
    }
  }
  @media (width >= 48rem) {
    .md\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  @media (width >= 48rem) {
    .md\:pt-32 {
      padding-top: calc(var(--spacing) * 32);
    }
  }
  @media (width >= 48rem) {
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  @media (width >= 48rem) {
    .md\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  @media (width >= 64rem) {
    .lg\:sticky {
      position: sticky;
    }
  }
  @media (width >= 64rem) {
    .lg\:mx-0 {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }
  @media (width >= 64rem) {
    .lg\:w-2\/5 {
      width: calc(2/5 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:w-3\/5 {
      width: calc(3/5 * 100%);
    }
  }
  @media (width >= 64rem) {
    .lg\:max-w-lg {
      max-width: var(--container-lg);
    }
  }
  @media (width >= 64rem) {
    .lg\:max-w-none {
      max-width: none;
    }
  }
  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  @media (width >= 64rem) {
    .lg\:gap-x-10 {
      column-gap: calc(var(--spacing) * 10);
    }
  }
  @media (width >= 64rem) {
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  @media (width >= 64rem) {
    .lg\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
  }
  @media (width >= 64rem) {
    .lg\:pt-2 {
      padding-top: calc(var(--spacing) * 2);
    }
  }
  @media (width >= 64rem) {
    .lg\:text-center {
      text-align: center;
    }
  }
}
::-webkit-scrollbar {
  width: 5px;
  height: 6px;
}
::-webkit-scrollbar-track {
  background-color: transparent;
}
::-webkit-scrollbar-thumb {
  background-color: #df00df4b;
  border-radius: 10px;
  border: none;
}
::-webkit-scrollbar-thumb:hover {
  background-color: #df00df93;
  border-radius: 10px;
  border: none;
}
* {
  scrollbar-width: thin;
  scrollbar-color: #bd00ec4d transparent;
}
body {
  font-family: "Poppins", sans-serif;
  font-weight: 400;
  font-style: normal;
}
th {
  background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 10%, transparent);
}
@supports (color: color-mix(in lab, red, red)) {
  th {
    background-color: color-mix(in oklab, var(--color-amber-500) 10%, transparent);
  }
}
table, th, td {
  border-style: var(--tw-border-style);
  border-width: 1px;
  border-color: var(--color-gray-400);
  padding: calc(var(--spacing) * 2);
  text-align: center;
}
.rightSection {
  border-left: 2px solid #c98a01;
}
table, th, td {
  font-family: monospace !important;
}
td {
  height: 50px;
  max-width: 100px;
  font-weight: 100 !important;
}
tbody tr:nth-child(odd) {
  background-color: color-mix(in srgb, oklch(76.9% 0.188 70.08) 5%, transparent);
}
@supports (color: color-mix(in lab, red, red)) {
  tbody tr:nth-child(odd) {
    background-color: color-mix(in oklab, var(--color-amber-500) 5%, transparent);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
